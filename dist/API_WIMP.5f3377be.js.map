{"version":3,"sources":["Fonctions.js","API_WIMP.js"],"names":["startZoom","r","t","global","rayon","compte","Boolean","console","log","zoom","trie","e","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","a","sin","cos","c","atan2","sqrt","d","routage","x","y","initCoord","min","max","random","initPoint","city","point","Lat","Lon","Alt","ville","Object","id","alt","push","openForm","document","getElementById","style","display","closeForm","module","exports","fs","require","lat_home","lon_home","macarte","markerClusters","list","Array","initMap","L","map","setView","markerClusterGroup","tileLayer","attribution","minZoom","maxZoom","addTo","home","circle","color","fillColor","fillOpacity","radius","_mRadius","command","control","position","onAdd","div","DomUtil","create","innerHTML","i","length","latlngs","polyline","myIcon","icon","iconSize","iconAnchor","popupAnchor","LeafIcon","Icon","extend","options","shadowSize","shadowAnchor","iconUrl","incon","iconDogo","marker","bindPopup","addLayer","window","onload"],"mappings":"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","file":"API_WIMP.5f3377be.js","sourceRoot":"..","sourcesContent":["// fonction permetant de paramêtrer le zoom de départ\nconst startZoom = function(r, t){\n  global.rayon = r;\n  var compte = new Boolean(\"true\");\n  console.log('rayon: ', r, 'zoom: ', zoom, 'compte: ', compte);\n   //Savoir si il a adéjà un compte avec le bouton \"home\" configurer\n  if (compte=true) {\n    zoom = rayon / 100;\n  }\n  else {\n    zoom = 16;\n  }\n}\n\n//fonction pour trier les distances entres les points groupes\n// Si distance < à 100 mètres, faire fondre le point dans le tracé\n// Sinon afficher un point classique\n//cf: https://www.movable-type.co.uk/scripts/latlong.html\nconst trie = function(e){\n  const r = 6371; // km  (mètres (e3))\n  const φ1 = e.lat[0] * Math.PI/180; // φ, λ en radians\n  const φ2 = e.lat[1] * Math.PI/180;\n  const Δφ = (e.lat[1]-e.lat[0]) * Math.PI/180;\n  const Δλ  = (e.lon[1]-e.lon[0]) * Math.PI/180;\n\n  console.log(\"φ1:\", φ1,\", φ2:\", φ2,\", Δφ:\", Δφ, \"Δλ :\", Δλ );\n\n  const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n            Math.cos(φ1) * Math.cos(φ2) *\n            Math.sin(Δλ /2) * Math.sin(Δλ /2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n  const d = r * c; // en km (en mètres)\n  console.log(\"a:\", a,\", c:\", c,\", distance:\", d);\n\n}\n\nconst routage = function(x, y){\n\n}\n\n//fonction donnant un nombre random entre un min et un max\nconst initCoord = function(min, max){\n  min = min;\n  max = max;\n  return Math.random() * (max - min) + min;\n}\n\n// Fonction d'initialisation de points (randoms) sur la carte\nconst initPoint = function(city){\n  for (let point = 0; point < 10; point++){\n\n    // Pour la France et ses alentours:\n    //Lat = initCoord(42, 51);\n    //Lon = initCoord(-4, 8);\n\n    // Pour la Bretagne et ses alentours:\n    // Lat = initCoord(47.97, 48.5);\n    // Lon = initCoord(-4, -1);\n    // Alt = initCoord(-4, 20);\n\n    // Pour Lannion et ses alentours:\n    Lat = initCoord(48.7861, 48.7041);\n    Lon = initCoord(-3.5499, -3.3877);\n    Alt = initCoord(-4, 20);\n\n    // Pour la vallé du Stanco et ses alentours:\n    // Lat = initCoord(48.73565081538279, 48.73746224718652);//48.73746224718652, -3.450671274438872\n    // Lon = initCoord(-3.4550969193093337, -3.450671274438872);\n    // Alt = initCoord(-4, 20);\n\n    var ville = new Object();\n    ville.id = point;\n    ville.lat = Lat;\n    ville.lon = Lon;\n    ville.alt = Alt;\n    city.push(ville);\n    if (ville.id > 0) {\n      trie(ville);\n    }\n  }\n}\n\nfunction openForm() {\n  document.getElementById(\"myForm\").style.display = \"block\";\n}\n\nfunction closeForm() {\n  document.getElementById(\"myForm\").style.display = \"none\";\n} \n\nmodule.exports = {\n  initPoint,\n  trie,\n  routage,\n  initCoord,\n  startZoom\n};\n\n\n\n// function select(){\n//   const text = 'SELECT * FROM animaux'\n//   // callback\n//   pool.query(text, (err, res) => {\n//     if (err) {\n//       console.log(\"coucou\")\n//     } else {\n//       console.log(\"non\")\n//     }\n//   })\n//   return 0;\n// }\n\n// function SelectId(){\n//   const selectElement = document.getElementById('selectAnimaux');\n//   selectElement.addEventListener('change', (event) => {\n//     alert(event.target.value);\n//   });\n// }\n","const fs = require(\"./Fonctions.js\");\n\n// On initialise la latitude et la longitude de l'habitation du client (centre de la carte)\n// Au préalable séléctionné/donné par l'utilisateur, dans le cas contraire:\n// Se positionner sur Paris.\n\n        var lat_home = 48.73056610085155;\n        var lon_home = -3.460834918664013;\n        var macarte = null;\n        var markerClusters; // Servira à stocker les groupes de marqueurs\n        global.zoom = 12; // Etablit la profondeur du zoom sur lequel la map se charge\n\n        // Nous initialisons un tableau city qui contiendra les \"ville\"\n        //list = nombre d'enregistrement fait par le GPS, sur la BDD, encore accessible\n        var list = 0;\n        let city = new Array(list);\n\n        // Fonction d'initialisation de la carte\n        function initMap() {\n\n           fs.initPoint(city);\n  \t       // Créer l'objet \"macarte\" et l'insèrer dans l'élément HTML qui a l'ID \"map\"\n  \t       macarte = L.map('map').setView([lat_home, lon_home], zoom);\n           markerClusters = L.markerClusterGroup(); // Nous initialisons les groupes de marqueurs\n  \t       // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr\n           L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {\n\t\t           // Source des données\n\t\t           attribution: 'données © OpenStreetMap/ODbL - rendu OSM France',\n\t\t           minZoom: 1,\n\t\t           maxZoom: 20\n  \t       }).addTo(macarte);\n//\n//            map.on('click', function(e) {\n//     alert(\"Lat, Lon : \" + e.latlng.lat + \", \" + e.latlng.lng)\n// });\n\n           //Création du périmêtre de la maison, autour du quel, la position du chien n'est pas pris en compte\n           var home = L.circle([48.732675, -3.446217], {\n             color: 'red',\n             fillColor: '#f03',\n             fillOpacity: 0.5,\n             //Radius = Rayon \"Maison\"\n             radius: 500\n          }).addTo(macarte);\n          console.log('home.radius: ', home._mRadius);\n          console.log('xxxxxxxxxxx: ', zoom);\n\n          fs.startZoom(home._mRadius, zoom);\n\n\n          //Création du boutton \"afficher Menu\"\n          //     /!\\ PAS FINI /!\\\n          var command = L.control({position: 'topright'});\n          command.onAdd = function (macarte) {\n            var div = L.DomUtil.create('div', 'command');\n            div.innerHTML += '<button><img href=\"images/icon_plus.png\" width=\"100px\" /></button>';\n            return div;\n          };\n          command.addTo(macarte);\n\n\n          for (var i = 0; i < city.length-1; i++) {\n            var latlngs = [[city[i].lat, city[i].lon],[city[i+1].lat, city[i+1].lon]];\n            var polyline = L.polyline(latlngs, {color: '#C50022'}).addTo(macarte);\n\n          //Création du tracé GPS qui suit les routes\n          //   L.Routing.control({\n          //     waypoints:[\n          //       //L.latLng(48.56036426785153, -3.1599197957359926),\n          //       L.latLng(city[i].lat, city[i].lon),\n          //       //L.latLng(48.51278434587372, -2.779401099923159)],\n          //       L.latLng(city[i+1].lat, city[i+1].lon)],\n          //        router: new L.Routing.OSRMv1({\n          //          profile: 'route/v1/driving',         // /!\\ IMPORTANT /!\\ : Suffixe de serviceUrl\n          //          serviceUrl: 'http://192.168.15.87:5000'  // Permet  http://localhost:5000\n          //        }),\n          //     // Class \"animate\" permet de régler (en CSS) certain détail de l'animation (vitesse d'exécution, temps avant exécution, coleur, etc...)\n          //     lineOptions: {\n          //       styles: [{className: 'animate'}]\n          //     },\n          //     draggableWaypoints: false,\n          //     addWaypoints: false\n          //   }).addTo(macarte);\n          }\n\n           //test pour ajout dans tableau city\n           for (ville in city) {\n             // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)\n             var myIcon = new L.icon({\n               iconSize: [100, 100],\n               iconAnchor: [25, 100],\n               popupAnchor: [-3, -76],\n             });\n             console.log(city[ville].lat);\n             console.log(city[ville].lon);\n             console.log(city[ville].alt);\n\n             var LeafIcon = L.Icon.extend({\n                  options: {\n                     // iconSize:     [25, 50],\n                     shadowSize:   [50, 64],\n                     iconAnchor:   [12, 40],\n                     shadowAnchor: [4, 62],\n                     popupAnchor:  [-3, -76]\n                  }\n              });\n\n              var myIcon = new L.icon({\n                iconUrl: require('/images/2pattes.png'),\n                options: {\n                  iconSize: [50, 50],\n                  iconAnchor: [250, 500],\n                  popupAnchor: [-3, -76],\n                }\n              });\n\n              var incon = new LeafIcon({\n                  iconUrl: require('/marker-icon.png')\n                  //shadowUrl: 'http://leafletjs.com/examples/custom-icons/leaf-shadow.png'\n              });\n\n              var iconDogo = new LeafIcon({\n                  iconUrl: require('/images/dogo.png')\n                  //shadowUrl: 'http://leafletjs.com/examples/custom-icons/leaf-shadow.png'\n              });\n\n\n             var marker = new L.marker([city[ville].lat, city[ville].lon, city[ville].alt], {icon: incon}).addTo(macarte);//.bindPopup(`<b> ${ville} <b><br>Lattitude: ${city[ville].lat} <br>Longitude: ${city[ville].lon} <br>Altitude: ${city[ville].alt} MAMSL`);\n             // Nous ajoutons la popup. A noter que son contenu (ici la variable ville) peut être du HTML\n             marker.bindPopup(`<b>Coordonnées: ${ville} <b><br>Lattitude: ${city[ville].lat} <br>Longitude: ${city[ville].lon} <br>Altitude: ${city[ville].alt} MAMSL`);\n          }\n           macarte.addLayer(markerClusters);\n           // Nous ajoutons la popup. A noter que son contenu (ici la variable ville) peut être du HTML\n           home.bindPopup(\"Maison\");\n        }\n        window.onload = function(){\n\t\t    // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé\n\t\t    initMap();\n      };\n"]}