{"version":3,"sources":["Fonctions.js"],"names":["startZoom","r","t","global","rayon","compte","Boolean","console","log","zoom","trie","e","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","a","sin","cos","c","atan2","sqrt","d","routage","x","y","initCoord","min","max","random","initPoint","city","point","Lat","Lon","Alt","ville","Object","id","alt","push","openForm","document","getElementById","style","display","closeForm","module","exports"],"mappings":"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","file":"Fonctions.3c6cfe5e.js","sourceRoot":"..","sourcesContent":["// fonction permetant de paramêtrer le zoom de départ\nconst startZoom = function(r, t){\n  global.rayon = r;\n  var compte = new Boolean(\"true\");\n  console.log('rayon: ', r, 'zoom: ', zoom, 'compte: ', compte);\n   //Savoir si il a adéjà un compte avec le bouton \"home\" configurer\n  if (compte=true) {\n    zoom = rayon / 100;\n  }\n  else {\n    zoom = 16;\n  }\n}\n\n//fonction pour trier les distances entres les points groupes\n// Si distance < à 100 mètres, faire fondre le point dans le tracé\n// Sinon afficher un point classique\n//cf: https://www.movable-type.co.uk/scripts/latlong.html\nconst trie = function(e){\n  const r = 6371; // km  (mètres (e3))\n  const φ1 = e.lat[0] * Math.PI/180; // φ, λ en radians\n  const φ2 = e.lat[1] * Math.PI/180;\n  const Δφ = (e.lat[1]-e.lat[0]) * Math.PI/180;\n  const Δλ  = (e.lon[1]-e.lon[0]) * Math.PI/180;\n\n  console.log(\"φ1:\", φ1,\", φ2:\", φ2,\", Δφ:\", Δφ, \"Δλ :\", Δλ );\n\n  const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n            Math.cos(φ1) * Math.cos(φ2) *\n            Math.sin(Δλ /2) * Math.sin(Δλ /2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n  const d = r * c; // en km (en mètres)\n  console.log(\"a:\", a,\", c:\", c,\", distance:\", d);\n\n}\n\nconst routage = function(x, y){\n\n}\n\n//fonction donnant un nombre random entre un min et un max\nconst initCoord = function(min, max){\n  min = min;\n  max = max;\n  return Math.random() * (max - min) + min;\n}\n\n// Fonction d'initialisation de points (randoms) sur la carte\nconst initPoint = function(city){\n  for (let point = 0; point < 10; point++){\n\n    // Pour la France et ses alentours:\n    //Lat = initCoord(42, 51);\n    //Lon = initCoord(-4, 8);\n\n    // Pour la Bretagne et ses alentours:\n    // Lat = initCoord(47.97, 48.5);\n    // Lon = initCoord(-4, -1);\n    // Alt = initCoord(-4, 20);\n\n    // Pour Lannion et ses alentours:\n    Lat = initCoord(48.7861, 48.7041);\n    Lon = initCoord(-3.5499, -3.3877);\n    Alt = initCoord(-4, 20);\n\n    // Pour la vallé du Stanco et ses alentours:\n    // Lat = initCoord(48.73565081538279, 48.73746224718652);//48.73746224718652, -3.450671274438872\n    // Lon = initCoord(-3.4550969193093337, -3.450671274438872);\n    // Alt = initCoord(-4, 20);\n\n    var ville = new Object();\n    ville.id = point;\n    ville.lat = Lat;\n    ville.lon = Lon;\n    ville.alt = Alt;\n    city.push(ville);\n    if (ville.id > 0) {\n      trie(ville);\n    }\n  }\n}\n\nfunction openForm() {\n  document.getElementById(\"myForm\").style.display = \"block\";\n}\n\nfunction closeForm() {\n  document.getElementById(\"myForm\").style.display = \"none\";\n} \n\nmodule.exports = {\n  initPoint,\n  trie,\n  routage,\n  initCoord,\n  startZoom\n};\n\n\n\n// function select(){\n//   const text = 'SELECT * FROM animaux'\n//   // callback\n//   pool.query(text, (err, res) => {\n//     if (err) {\n//       console.log(\"coucou\")\n//     } else {\n//       console.log(\"non\")\n//     }\n//   })\n//   return 0;\n// }\n\n// function SelectId(){\n//   const selectElement = document.getElementById('selectAnimaux');\n//   selectElement.addEventListener('change', (event) => {\n//     alert(event.target.value);\n//   });\n// }\n"]}